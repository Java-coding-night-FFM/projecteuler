/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/


public class Problem2 {


    public static void main(String[] args) {

        int maxNum = 4000000;
        long sum=0;
        System.out.println("\n\nFibonacci series upto " + maxNum + " numbers : ");


        //printing Fibonacci series upto number
        for (int i = 1; i <= maxNum; i++) {
            if(getFibonacciNumber(i)%2==0){
                sum += getFibonacciNumber(i);
                System.out.println("partial"+sum);
            }

        }
        System.out.println("total"+sum);
        System.out.println("done!");
    }


    public static long getFibonacciNumber(int number) {


        if(number == 1 || number == 2){
            return 1;
        }

        return getFibonacciNumber(number - 1) + getFibonacciNumber(number - 2); //tail recursion

    }
}

